/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Sky.Cat;


import Sky.DateModel.DateSpinnerDataModel;
import Sky.Listener.Event;
import Sky.Listener.EventListener;
import Sky.Listener.EventType;
import dbConnect.DBConnect;
import dbConnect.models.ITRequest;
import dbConnect.models.constrain.MaxLength;

import javax.swing.*;
import javax.swing.text.DateFormatter;
import java.awt.*;
import java.lang.annotation.Annotation;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

public class AddRequest extends javax.swing.JFrame {
    DateSpinnerDataModel dateSpinnerDataModel = new DateSpinnerDataModel();

    public AddRequest() {
        initComponents();

        getContentPane().setBackground(new Color(165,196,221));

        loadDateSelector();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        addRequestButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        requestNameField = new javax.swing.JTextField();
        requestEmailField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        requestTypeCombox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        requestTypeField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestDetailField = new javax.swing.JTextArea();
        clearInfoButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        DateSpinner = new javax.swing.JSpinner();
        requestDateField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nameWarnLable = new javax.swing.JLabel();
        emailWarnLable = new javax.swing.JLabel();
        dayWarnLabel = new javax.swing.JLabel();
        wordCountDetail = new javax.swing.JLabel();
        detailWarnLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Request");
        setAlwaysOnTop(true);
        setLocationByPlatform(true);

        cancelButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addRequestButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addRequestButton.setText("Add Request");
        addRequestButton.setToolTipText("Add a request to database");
        addRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRequestButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Requester's Name");

        jLabel2.setText("Day of request");

        requestNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                requestNameFieldKeyReleased(evt);
            }
        });

        requestEmailField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                requestEmailFieldKeyReleased(evt);
            }
        });

        jLabel4.setText("Requester's Email");

        requestTypeCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Machine service", "Update sofware", "General tech support" }));
        requestTypeCombox.setSelectedIndex(-1);
        requestTypeCombox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTypeComboxActionPerformed(evt);
            }
        });

        jLabel5.setText("Custom");

        requestTypeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTypeFieldActionPerformed(evt);
            }
        });
        requestTypeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                requestTypeFieldKeyReleased(evt);
            }
        });

        jLabel6.setText("Default task");

        jLabel7.setText("Request details");

        requestDetailField.setColumns(20);
        requestDetailField.setLineWrap(true);
        requestDetailField.setRows(3);
        requestDetailField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                requestDetailFieldKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(requestDetailField);

        clearInfoButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearInfoButton.setText("Clear info");
        clearInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearInfoButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel8.setLabelFor(requestTypeField);
        jLabel8.setText("Enter your task here");

        DateSpinner.setToolTipText("Select a day for when the request took place.");
        DateSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                DateSpinnerStateChanged(evt);
            }
        });

        requestDateField.setEditable(false);
        requestDateField.setEnabled(false);

        jLabel3.setText("Date");

        nameWarnLable.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        nameWarnLable.setText("Checking name...");

        emailWarnLable.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        emailWarnLable.setText("Checking email...");

        dayWarnLabel.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        dayWarnLabel.setText("Checking date...");

        wordCountDetail.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        wordCountDetail.setForeground(new java.awt.Color(0, 153, 0));
        wordCountDetail.setText("(0/255)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameWarnLable)
                            .addComponent(dayWarnLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(emailWarnLable))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(detailWarnLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(wordCountDetail)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addRequestButton)
                                .addGap(18, 18, 18)
                                .addComponent(clearInfoButton)
                                .addGap(18, 18, 18)
                                .addComponent(cancelButton)
                                .addGap(26, 26, 26))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(requestNameField)
                                    .addComponent(requestEmailField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(requestTypeCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(0, 170, Short.MAX_VALUE))
                                            .addComponent(requestTypeField))))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(requestDateField)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(requestNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(DateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requestDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(requestTypeCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(requestTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wordCountDetail)
                            .addComponent(detailWarnLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addRequestButton)
                            .addComponent(cancelButton)
                            .addComponent(clearInfoButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(79, 79, 79)
                        .addComponent(nameWarnLable)
                        .addGap(14, 14, 14)
                        .addComponent(emailWarnLable)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dayWarnLabel)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void requestTypeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTypeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requestTypeFieldActionPerformed

    private void requestTypeComboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTypeComboxActionPerformed
        String reqType = (String) requestTypeCombox.getSelectedItem();

        if (reqType != null) {
            requestTypeField.setText(reqType);
        }
    }//GEN-LAST:event_requestTypeComboxActionPerformed

    private void clearInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearInfoButtonActionPerformed
        clearFormFields();
    }//GEN-LAST:event_clearInfoButtonActionPerformed

    private void addRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRequestButtonActionPerformed
        insertRequest();

        EventListener.inform(new Event(EventType.DataEvent));
    }//GEN-LAST:event_addRequestButtonActionPerformed

    private void DateSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_DateSpinnerStateChanged
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = (Date) DateSpinner.getValue();
        if (date != null) {
            String format = dateFormat.format(date);
            requestDateField.setText(format);
        }
        dateValidator();
    }//GEN-LAST:event_DateSpinnerStateChanged

    private void requestNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_requestNameFieldKeyReleased
        nameValidator();
    }//GEN-LAST:event_requestNameFieldKeyReleased

    private void requestEmailFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_requestEmailFieldKeyReleased
        emailValidator();
    }//GEN-LAST:event_requestEmailFieldKeyReleased

    private void requestDetailFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_requestDetailFieldKeyReleased
        detailValidator();
    }//GEN-LAST:event_requestDetailFieldKeyReleased

    private void requestTypeFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_requestTypeFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_requestTypeFieldKeyReleased

    private void clearFormFields() {
        requestTypeField.setText(null);
        requestDateField.setText(null);
        requestDetailField.setText(null);
        requestEmailField.setText(null);
        requestNameField.setText(null);
        requestTypeCombox.setSelectedIndex(-1);
    }

    private void loadDateSelector() {
        DateSpinner.setModel(dateSpinnerDataModel);
        JSpinner.DateEditor editor = new JSpinner.DateEditor(DateSpinner, "yyyy-MM-dd");
        DateSpinner.setEditor(editor);
    }

    private void insertToDataBase(String name, String email, java.sql.Date date, String type, String detail)  {
        ITRequest itRequest = new ITRequest(name, date, email, type, detail);
        boolean success = DBConnect.insert(itRequest);
        if (success) {
            javax.swing.JOptionPane.showMessageDialog(this, "Request registered in database!", "Successes", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            clearFormFields();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Cannot add request", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private void insertRequest() {
        try {
            String name = requestNameField.getText();
            String type = requestTypeField.getText();
            String detail = requestDetailField.getText();
            String email = requestEmailField.getText();
            java.sql.Date date = java.sql.Date.valueOf(requestDateField.getText());

            insertToDataBase(name, email, date, type, detail);

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Cannot add request. Problem founded: \n >" + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private void nameValidator() {
            String name = requestNameField.getText();
            if (name != null ) {
                if (name.isBlank()) {
                    nameWarnLable.setForeground(new Color(255,153,51));
                    nameWarnLable.setText("Warning: The name is blank!" );
                    addRequestButton.setEnabled(false);
                } else if (name.length() > 255) {
                    nameWarnLable.setForeground(new Color(255,153,51));
                    nameWarnLable.setText("Warning: name's length exceeded limit and will be trimmed! (" + name.length() + "/255" );
                    addRequestButton.setEnabled(true);
                } else {
                    nameWarnLable.setForeground(new Color(0,153,0));
                    nameWarnLable.setText("Name checked");
                    addRequestButton.setEnabled(true);
                }
            } else {
                nameWarnLable.setForeground(new Color(255,51,51));
                nameWarnLable.setText("Error: name field not allowed to be empty" );
                addRequestButton.setEnabled(false);
            }
    }

    private void dateValidator() {
        String name = requestDateField.getText();
        if (name != null ) {
            if (name.isBlank()) {
                dayWarnLabel.setForeground(new Color(255,153,51));
                dayWarnLabel.setText("Warning: The date is blank!" );
                addRequestButton.setEnabled(false);
            } else {
                dayWarnLabel.setForeground(new Color(0,153,0));
                dayWarnLabel.setText("Date checked");
                addRequestButton.setEnabled(true);
            }
        } else {
            dayWarnLabel.setForeground(new Color(255,51,51));
            dayWarnLabel.setText("Error: Please select a day!" );
            addRequestButton.setEnabled(false);
        }
    }

    private void emailValidator() {
        String email = requestEmailField.getText();
        if (email != null ) {
            if (email.isBlank()) {
                emailWarnLable.setForeground(new Color(255,153,51));
                emailWarnLable.setText("Warning: The email is blank!" );
                addRequestButton.setEnabled(false);
            } else if (email.length() > 255) {
                emailWarnLable.setForeground(new Color(255,153,51));
                emailWarnLable.setText("Warning: email's length exceeded limit and will be trimmed! (" + email.length() + "/255" );
                addRequestButton.setEnabled(true);
            } else {
                emailWarnLable.setForeground(new Color(0,153,0));
                emailWarnLable.setText("Email checked");
                addRequestButton.setEnabled(true);
            }
        } else {
            emailWarnLable.setForeground(new Color(255,51,51));
            emailWarnLable.setText("Error: email field not allowed to be empty" );
            addRequestButton.setEnabled(false);
        }
    }

    private void detailValidator() {
        String details = requestDetailField.getText();
        if (details != null ) {
            if (details.length() > 255) {
                detailWarnLabel.setForeground(new Color(255,153,51));
                wordCountDetail.setForeground(new Color(255,153,51));
                detailWarnLabel.setText("Warning: details length exceeded limit and will be trimmed!");
                wordCountDetail.setText("(" + details.length() + "/255)");
            } else {
                detailWarnLabel.setForeground(new Color(0,153,0));
                wordCountDetail.setText("(" + details.length() + "/255)");
            }
        }
    }



    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRequest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner DateSpinner;
    private javax.swing.JButton addRequestButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton clearInfoButton;
    private javax.swing.JLabel dayWarnLabel;
    private javax.swing.JLabel detailWarnLabel;
    private javax.swing.JLabel emailWarnLable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameWarnLable;
    private javax.swing.JTextField requestDateField;
    private javax.swing.JTextArea requestDetailField;
    private javax.swing.JTextField requestEmailField;
    private javax.swing.JTextField requestNameField;
    private javax.swing.JComboBox<String> requestTypeCombox;
    private javax.swing.JTextField requestTypeField;
    private javax.swing.JLabel wordCountDetail;
    // End of variables declaration//GEN-END:variables
}
