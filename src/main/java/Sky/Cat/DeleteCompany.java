/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Sky.Cat;


import Sky.Cat.model.Company;
import Sky.Cat.model.Product;
import Sky.DateModel.DateSpinnerDataModel;
import Sky.Listener.Event;
import Sky.Listener.EventListener;
import Sky.Listener.EventType;
import com.google.gson.Gson;
import dbConnect.DBConnect;
import dbConnect.models.json.JsonUtility;

import javax.swing.*;
import java.awt.*;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class DeleteCompany extends javax.swing.JFrame {

    public DeleteCompany() {
        initComponents();

        getContentPane().setBackground(new Color(165,196,221));

        fillComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        updateCompanyButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        websiteField = new javax.swing.JTextField();
        taxCodeField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        detailWarnLabel = new javax.swing.JLabel();
        companyNameField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        isPublicCheckbox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        revenueField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        marketCapField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        businessTypeTextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        contactTextArea = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        companyIdComboBox = new javax.swing.JComboBox<>();
        establishedYearField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Delete Company");
        setAlwaysOnTop(true);
        setLocationByPlatform(true);

        cancelButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        updateCompanyButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateCompanyButton.setText("Delete Company");
        updateCompanyButton.setToolTipText("Delete an existing company in the database");
        updateCompanyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCompanyButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Company Code");

        jLabel2.setText("Company Name");

        websiteField.setEditable(false);

        taxCodeField.setEditable(false);

        jLabel4.setText("Tax Code");

        jLabel7.setText("Website URL");

        companyNameField.setEditable(false);

        jLabel9.setText("Established Year");

        isPublicCheckbox.setText("Public Company");
        isPublicCheckbox.setEnabled(false);

        jLabel3.setText("Revenue");

        revenueField.setEditable(false);

        jLabel5.setText("Address (JSON)");

        marketCapField.setEditable(false);

        jLabel6.setText("Market Cap");

        businessTypeTextArea.setEditable(false);
        businessTypeTextArea.setColumns(20);
        businessTypeTextArea.setRows(5);
        jScrollPane1.setViewportView(businessTypeTextArea);

        jLabel8.setText("Contact (JSON)");

        addressTextArea.setEditable(false);
        addressTextArea.setColumns(20);
        addressTextArea.setRows(5);
        jScrollPane2.setViewportView(addressTextArea);

        contactTextArea.setEditable(false);
        contactTextArea.setColumns(20);
        contactTextArea.setRows(5);
        jScrollPane3.setViewportView(contactTextArea);

        jLabel10.setText("Business Type");

        companyIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyIdComboBoxActionPerformed(evt);
            }
        });

        establishedYearField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addGap(2, 2, 2))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(companyIdComboBox, 0, 240, Short.MAX_VALUE)
                            .addComponent(taxCodeField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(companyNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(establishedYearField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(updateCompanyButton)
                                .addGap(18, 18, 18)
                                .addComponent(cancelButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(detailWarnLabel))
                    .addComponent(websiteField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(marketCapField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(isPublicCheckbox)))
                        .addGap(0, 235, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(companyNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(companyIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(taxCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(establishedYearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(websiteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(isPublicCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marketCapField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(detailWarnLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(updateCompanyButton))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void updateCompanyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCompanyButtonActionPerformed
        deleteCompany();

        EventListener.inform(new Event(EventType.DataEvent));
    }//GEN-LAST:event_updateCompanyButtonActionPerformed

    private void companyIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyIdComboBoxActionPerformed
        Company selectedCompany = (Company) companyIdComboBox.getSelectedItem();
        if (selectedCompany != null) {
            try {
                companyNameField.setText(selectedCompany.getCompanyName());
                if (selectedCompany.getTaxCode() != null) {
                    taxCodeField.setText(selectedCompany.getTaxCode());
                }

                establishedYearField.setText(Integer.toString(selectedCompany.getEstablishedYear()));

                if (selectedCompany.getWebsite() != null) {
                    websiteField.setText(selectedCompany.getWebsite());
                }

                if (selectedCompany.getRevenue() != null) {
                    revenueField.setText(selectedCompany.getRevenue());
                }

                isPublicCheckbox.setSelected(selectedCompany.isPublic());

                if (selectedCompany.getMarketCap() != null) {
                    marketCapField.setText(selectedCompany.getMarketCap());
                }

                if (selectedCompany.getAddress() != null && !selectedCompany.getAddress().isEmpty()) {
                    addressTextArea.setText(JsonUtility.toJson(selectedCompany.getAddress()));
                }

                if (selectedCompany.getContact() != null && !selectedCompany.getContact().isEmpty()) {
                    contactTextArea.setText(JsonUtility.toJson(selectedCompany.getAddress()));
                }

                if (selectedCompany.getBusinessType() != null && !selectedCompany.getBusinessType().isEmpty()) {
                    String businessTypes = String.join(", ", selectedCompany.getBusinessType());
                    businessTypeTextArea.setText(businessTypes);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error loading company data: " + e.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("Error populating company fields: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_companyIdComboBoxActionPerformed

    private void clearFormFields() {
        companyNameField.setText("");
        establishedYearField.setText("");
        taxCodeField.setText("");
        websiteField.setText("");
        revenueField.setText("");
        isPublicCheckbox.setSelected(false);
        marketCapField.setText("");
        addressTextArea.setText("");
        contactTextArea.setText("");
        businessTypeTextArea.setText("");
    }

    private void deleteCompany() {
        try {
            Company selectedCompany = (Company) companyIdComboBox.getSelectedItem();
            if (selectedCompany == null) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Please select a company to delete", "Error",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            String companyCode = selectedCompany.getCompanyCode();

            // Special validation for company deletion
            if (!canDeleteCompany(companyCode)) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Cannot delete company: There are still products that belong to this company.\n" +
                                "Please delete or reassign all products first.", "Cannot Delete Company",
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }

            Company company = new Company();
            company.setCompanyCode(companyCode);

            boolean success = DBConnect.delete(company);
            if (success) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Company removed from database!", "Success",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
                updateScreen();
                clearFormFields();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Cannot remove company", "Error",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Cannot remove company: " + e.getMessage(), "Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean canDeleteCompany(String companyCode) {
        try {
            String condition;
            if (Main.getDatabaseMode() == Main.DatabaseMode.MySQL) {
                condition = "companyCode = ?";
            } else {
                condition = "companyCode : ?}";
            }

            List<Product> existingProducts = DBConnect.retrieve(Product.class, condition, companyCode);
            return existingProducts.isEmpty();

        } catch (Exception e) {
            System.out.println("Error checking for existing products: " + e.getMessage());
            return false;
        }
    }

    private void loadCompanyComboBox() {
        try {
            List<Company> companies = DBConnect.retrieveAll(Company.class);
            companyIdComboBox.removeAllItems();
            for (Company company : companies) {
                companyIdComboBox.addItem(company);
            }
        } catch (Exception e) {
            System.out.println("Error loading companies: " + e.getMessage());
        }
    }

    private void updateScreen() {
        companyIdComboBox.removeAllItems();
        loadCompanyComboBox();
    }

    public static void main(String[] args) {
        try {
            UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteCompany().setVisible(true);
            }
        });
    }

    private void fillComboBox() {
        try {
            String condition;
            if (Main.getDatabaseMode() == Main.DatabaseMode.MySQL) {
                condition = "companyCode = ?";
            } else {
                condition = "companyCode : ?";
            }

            List<Company> companies = DBConnect.retrieveAll(Company.class);
            companyIdComboBox.removeAllItems();
            for (Company company : companies) {
                companyIdComboBox.addItem(company);
            }
        } catch (Exception e) {
            System.out.println("Error loading specific company: " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JTextArea businessTypeTextArea;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<Company> companyIdComboBox;
    private javax.swing.JTextField companyNameField;
    private javax.swing.JTextArea contactTextArea;
    private javax.swing.JLabel detailWarnLabel;
    private javax.swing.JTextField establishedYearField;
    private javax.swing.JCheckBox isPublicCheckbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField marketCapField;
    private javax.swing.JTextField revenueField;
    private javax.swing.JTextField taxCodeField;
    private javax.swing.JButton updateCompanyButton;
    private javax.swing.JTextField websiteField;
    // End of variables declaration//GEN-END:variables
}
